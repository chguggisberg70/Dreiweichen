name: Android CI (Debug + Release)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: android-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      JAVA_DISTRIBUTION: temurin
      JAVA_VERSION: '21'     # du nutzt lokal Java 21
      ANDROID_API: '34'      # wenn du auf 36 baust, hier 36 setzen
      BUILD_TOOLS: '34.0.0'  # ggf. zu 36.0.0 Ã¤ndern, falls compileSdk=36

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: ${{ env.ANDROID_API }}
          build-tools: ${{ env.BUILD_TOOLS }}

      - name: Gradle cache
        uses: gradle/gradle-build-action@v3

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Print versions
        run: |
          ./gradlew -v
          java -version

      - name: Lint (optional)
        run: ./gradlew lint
        continue-on-error: true

      - name: Build Debug & Release APK
        run: ./gradlew assembleDebug assembleRelease --stacktrace

      # ---------- optional: Release signieren, wenn Secrets gesetzt sind ----------
      # Erwarte folgende Secrets im Repo:
      # ANDROID_KEYSTORE_B64  (Base64 des .jks/.keystore)
      # ANDROID_KEY_ALIAS
      # ANDROID_KEYSTORE_PASSWORD
      # ANDROID_KEY_PASSWORD
      - name: Decode keystore (optional)
        shell: bash
        run: |
          if [[ -n "${{ secrets.ANDROID_KEYSTORE_B64 }}" ]]; then
            echo "${{ secrets.ANDROID_KEYSTORE_B64 }}" | base64 -d > keystore.jks
            echo "Keystore decoded."
          else
            echo "No ANDROID_KEYSTORE_B64 secret set. Skipping signing."
          fi

      - name: Sign Release APK (optional)
        shell: bash
        env:
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          if [[ -n "${{ secrets.ANDROID_KEYSTORE_B64 }}" ]]; then
            APK=$(ls app/build/outputs/apk/release/*-release-unsigned.apk 2>/dev/null | head -n 1 || true)
            if [[ -z "$APK" ]]; then
              echo "Unsigned release APK not found. Skipping signing."
              exit 0
            fi
            ALIGNED=app/build/outputs/apk/release/app-release-aligned.apk
            zipalign -p -f 4 "$APK" "$ALIGNED"
            apksigner sign \
              --ks keystore.jks \
              --ks-key-alias "$KEY_ALIAS" \
              --ks-pass env:KEYSTORE_PASSWORD \
              --key-pass env:KEY_PASSWORD \
              --out app/build/outputs/apk/release/app-release-signed.apk \
              "$ALIGNED"
            apksigner verify app/build/outputs/apk/release/app-release-signed.apk
          else
            echo "No keystore secrets; skipping signing."
          fi

      # ---------- Artefakte hochladen ----------
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: Dreiweichen-debug-apk
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: warn
          retention-days: 7

      - name: Upload Release APK (unsigned)
        uses: actions/upload-artifact@v4
        with:
          name: Dreiweichen-release-unsigned-apk
          path: app/build/outputs/apk/release/*-release-unsigned.apk
          if-no-files-found: warn
          retention-days: 7

      - name: Upload Release APK (signed)
        uses: actions/upload-artifact@v4
        with:
          name: Dreiweichen-release-signed-apk
          path: app/build/outputs/apk/release/app-release-signed.apk
          if-no-files-found: ignore
          retention-days: 7

      - name: Upload Mapping (falls vorhanden)
        uses: actions/upload-artifact@v4
        with:
          name: Dreiweichen-mapping
          path: app/build/outputs/mapping/release/mapping.txt
          if-no-files-found: ignore
          retention-days: 7
